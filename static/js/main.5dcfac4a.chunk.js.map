{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/HomePage.tsx","components/PageNotFound.tsx","components/PageNavLink.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","personSex","person","to","slug","classNames","sex","name","PeopleTable","people","isSelected","findPerson","personName","foundPerson","find","map","born","died","motherName","fatherName","href","PeoplePage","useParams","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","loadedPeople","fetchPeople","length","HomePage","PageNotFound","PageNavLink","text","isActive","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5dcfac4a.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const isWomen = (personSex: string) => {\n    return personSex === 'f';\n  };\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames(\n        { 'has-text-danger': isWomen(person.sex) },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  slug: string | undefined;\n};\n\nexport const PeopleTable: FC<Props> = ({ people, slug }) => {\n  const isSelected = (person: Person) => {\n    return person.slug === slug;\n  };\n\n  const findPerson = (personName: string | null) => {\n    const foundPerson = people.find(person => person.name === personName);\n\n    if (foundPerson) {\n      return (\n        <PersonLink person={foundPerson} />\n      );\n    }\n\n    if (personName) {\n      return personName;\n    }\n\n    return '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': isSelected(person),\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{findPerson(person.motherName)}</td>\n            <td>{findPerson(person.fatherName)}</td>\n          </tr>\n        ))}\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/jan-van-brussel-1714\">\n              Jan van Brussel\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1714</td>\n          <td>1748</td>\n          <td>Joanna van Rooten</td>\n          <td>Jacobus van Brussel</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/philibert-haverbeke-1907\">\n              Philibert Haverbeke\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1907</td>\n          <td>1997</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/emma-de-milliano-1876\"\n            >\n              Emma de Milliano\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/emile-haverbeke-1877\">\n              Emile Haverbeke\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\" className=\"has-background-warning\">\n          <td>\n            <a href=\"#/people/jan-frans-van-brussel-1761\">\n              Jan Frans van Brussel\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1761</td>\n          <td>1833</td>\n          <td>-</td>\n\n          <td>\n            <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n              Jacobus Bernardus van Brussel\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/lievijne-jans-1542\"\n            >\n              Lievijne Jans\n            </a>\n          </td>\n\n          <td>f</td>\n          <td>1542</td>\n          <td>1582</td>\n          <td>-</td>\n          <td>-</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/bernardus-de-causmaecker-1721\">\n              Bernardus de Causmaecker\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1721</td>\n          <td>1789</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/livina-haverbeke-1692\"\n            >\n              Livina Haverbeke\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/lieven-de-causmaecker-1696\">\n              Lieven de Causmaecker\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchPeople() {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const loadedPeople = await getPeople();\n\n        setPeople(loadedPeople);\n      } catch (e) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {isError ? (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              ) : (\n                <>\n                  {people.length === 0 && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                  <PeopleTable people={people} slug={slug} />\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  text: string;\n  to: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ text, to }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import {\n  Routes, Route, Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PageNavLink } from './components/PageNavLink';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink text=\"Home\" to=\"/\" />\n          <PageNavLink text=\"People\" to=\"/people\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}